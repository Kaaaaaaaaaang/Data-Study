
GROUP BY 구문은 나열한 필드를 기준으로 데이터를 묶어준다.
묶어 놓은 필드를 대상으로 MIN(), MAX(), SUM(), AVG(), COUNT() 등의 집계함수를 이용해 그룹의 최솟값, 최댓값, 합계, 평균, 개수를 구한다.
HAVING 구문은 WHERE 구문과 비슷한 기능으로, 그룹에 대한 검색 조건을 설정한다.

구문 : SELECT 검색필드명
		FROM 테이블명
		WHERE 조건식
		GROUP BY 필드명1, 필드명2, ... , 필드명n
		HAVING 그룹 내 조건식;

MIN(), MAX(), SUM(), AVG(), COUNT() 함수 등 그룹에 대한 값을 구하는 함수를 그룹함수(Group Function) 또는 집계함수(Aggregate Function)라 한다.

DISTINCT 구문은 나열한 필드 값을 중복 없이 구한다.

구문 : SELECT DISTINCT 검색필드명
		FROM 테이블명
		WHERE 조건식;

JOIN 구문은 2개 이상 테이블의 연관 정보를 구한다. 
"FROM 기준 테이블의 JOIN 연관 테이블 ON 조건" 형식으로 ON에는 기준 테이블과 연관 테이블의 관계를 나타내는 조건을 설정한다.
연관 필드를 조건으로 지정하면 테이블 간 위치는 자동으로 맞춘다.
"JOIN .. ON 조건" 형식을 "(+)"로 변경할 수 있다.

구문 #1 : SELECT 검색필드명
		FROM 테이블명1
		JOIN 테이블명2
		ON 테이블명1(별명1).필드명1 = 테이블명2(별명2), 필드명1
		AND 테이블명1(별명1).필드명2 = 테이블명2(별명2), 필드명2
		WHERE 조건식;
구문 #2 : SELECT 검색필드명
		FROM 테이블명1 (별명1),
			테이블명2 (별명2)
		WHERE 테이블명1(별명1).필드명1 = 테이블명2(별명2).필드명1(+);

- JOIN : 기준 테이블과 대상 테이블에 매칭하는 필드값이 있는 경우에 검색한다.
- LEFT JOIN : 기준 테이블의 모든 필드값을 보이고 대상 테이블에 매칭하는 필드값이 있는 경우에 검색하고, 그렇지 않으면 공백으로 보인다.
- RIGHT JOIN : 대상 테이블의 모든 필드값을 보이고 기준 테이블에 매칭하는 필드값이 있는 경우에 검색하고, 그렇지 않으면 공백으로 보인다.
- FULL OUTER JOIN : 기준 테이블과 대상 테이블에 상호 매칭하는 필드값이 있는 경우에 검색하고, 그렇지 않으면 공백으로 보인다.

CASE 구문은 조건에 만족하는 결괏값을 반환한다. '조건대상'에 대한 '비굣값'을 WHEN 구문에 지정하고, 조건을 만족할 경우 THEN 구문에서 지정한 '결과'를 반환한다.
만일 어떤 조건도 만족하지 않으면 ELSE 구문의 값을 반환한다. '조건대상' 없이 WHEN 구문의 조건에 만족하면 THEN 구문의 값을 반환하기도 한다.

구문 #1 : CASE 조건대상 WHEN 비굣값1 THEN 결과1
					WHEN 비굣값2 THEN 결과2
							.
							.
					WHEN 비굣값n THEN 결과n
					ELSE 결과가 없을 때
		END
구문 #2 : CASE  WHEN 비굣값1 THEN 결과1
			  WHEN 비굣값2 THEN 결과2
						.
						.
			  WHEN 비굣값n THEN 결과n
			  ELSE 결과가 없을 때
		 END

ROWNUM 구문은 레코드를 검색할 때 생성되는 행 번호를 구한다. 검색 행이 10행이라면 1에서 10까지의 행 번호가 있고,
검색 행이 100행이라면 1에서 100까지 행 번호가 있다. 데이터를 추가하거나 삭제하면 행 번호도 바뀐다.

NULL 은 필드에 할당된 값이 없는 상태다. IS NULL 명령은 값이 없는 데이터를 검색한다. 
반면 IS NOT NULL 명령은 값이 있는 데이터를 검색할 때 사용한다. NULL 은 아무것도 정해지지 않은 상태로 미지의 값이라 부르기도 한다.

구문 : SELECT 검색필드명
		FROM 테이블명
		WHERE 필드명 IS [NOT] NULL;

DUAL 테이블은 오라클에서 기본적으로 설치되는 SYSTEM 권한의 1행으로 구성된 테이블이다.
이 테이블은 값이 'x'인 'DUMMY' 필드를 가지고 있다. 테이블 검색보다는 일반적으로 수치 계산 값과 함수 실행 결과, 문자 출력값을 확인하는 데 사용된다.
예를 들어, "SELECT 3*2 FROM DUAL;"의 결과는 3*2의 결과인 6을 출력한다.

구문 #1 : SELECT 연산, 함수실행 결과, 문자 출력값 등
		FROM DUAL;
구문 #2 : SELECT 연산, 함수실행 결과, 문자 출력값 등
		FROM DUAL CONNECT BY LEVEL <= n;

SELECT * FROM DUAL; --'x'